@model OutlayChartViewModel

@{
    ViewData["Title"] = "Home Page";
}

@if (Model.CurrentMonthCategoryOutlays.Count == 0)
{
    <div class="container content-center text-center">
        <h1 class="mb-5">you don't see anything, everything is fine</h1>
        <h3 class="text-secondary">when you create a category and spendings, the statistics will appear here</h3>
        <h3 class="text-secondary">For this go to <a class="text-info">Spendings Management</a></h3>
    </div>
}
else
{
    <form method="post">
        <div class="row">
            <div class="col-3">
               <div class="p-3 mt-4 row">
                    <div class="col-12 text-center mb-3">
                        <img src="@Model.User.ImageUrl" width="150px" height="150px" style="border-radius:50%; border:5px solid #000000; object-fit: cover;"/>
                    </div>
                    <div class="col-12 mb-3 pb-2">
                        <h4 class="text-primary text-center">@Model.User.Name</h4>
                        <hr/>
                    </div>
                    <h5>Outlays Date</h5>
                    <div class="mb-3">
                        <select asp-for="@Model.SelectedYear" asp-items="@Model.YearsList" class="form-select">
                            <option disabled selected>--Select Year--</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <select asp-for="@Model.SelectedMonth" asp-items="@Model.MonthList" class="form-select">
                            <option disabled selected>--Select Year--</option>
                        </select>
                    </div>
                    <h5>Categories</h5>
                    <div class="mb-3">
                        <ul class="scrollBar">
                            @foreach (var categoryStatus in Model.CategoryStatuses)
                            {
                                <div>
                                    <input asp-for="@categoryStatus.IsActive" type="checkbox" id="@categoryStatus.Category.Name"/>
                                    <label class="text-secondary">@categoryStatus.Category.Name</label>
                                </div>   
                            }
                        </ul>
                    </div>
                    <div class="mb-3">
                        <button type="submit" class="btn btn-primary col-12">Apply Filters</button>
                    </div>
                    <div>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary col-12">Clear Filters</a>
                    </div>
                </div>
            </div>
            <div class="col-9">
                <div class="border p-3 mt-4 row">
                    <div class="row col-12 mb-3 pb-2">
                        <div class="col-6">
                            <h2 class="text-primary">Your Spendings</h2>
                        </div>
                        <div class="col-6 text-end">
                            <h2 class="text-secondary">@Model.OutlaysData</h2>
                        </div>
                    </div>
                    <div class="mb-3 col-12">
                        <canvas id="userCategoryOutlaysBar" style="width:100%;"></canvas>
                    </div>
                    <div class="container my-custom-scrollbar table-wrapper-scroll-y mb-4">
                        <table class="table table-bordered table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th> Name </th>
                                    <th class="text-center"> Cost </th>
                                    <th class="text-center"> Category </th>
                                    <th class="text-center"> Date </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach(var outlay in Model.CurrentMonthOutlays)
                                {
                                    <tr>
                                        <td> @outlay.Name </td>
                                        <td class="text-center"> @outlay.Cost.ToString("c") </td>
                                        <td class="text-center"> @outlay.Category.Name </td>
                                        <td class="text-center"> @outlay.CreatedDate.ToString("MM/dd/yyyy") </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="row col-12">
                        <h2 class="col-12 text-end text-primary">@($"{Model.User.Income} - {Model.CurrentMonthOutlays.Sum(x => x.Cost)} = {Model.User.Income - Model.CurrentMonthOutlays.Sum(x => x.Cost)}")</h2>
                    </div>
                </div>
            </div>
        </div>
    </form>
}



@section Scripts
{
    <script type="text/javascript">
        var categories = [];
        var categoryOutlays = [];
        var colors = [];

        setupChartSpendings();

        function generateRandomColor() {
          var letters = '0123456789ABCDEF';
          var color = '#';
          for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
          }
          return color;
        }

        function generateListOfColors(count){
            let colors = [];
            for (var i = 0; i < count; ++i){
                colors.push(generateRandomColor());
            }
            return colors;
        }

        function setupChartSpendings(){
            var result = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CurrentMonthCategoryOutlays));
            for (var key in result){
                categories.push(key);
                categoryOutlays.push(result[key]);
            }
            colors = generateListOfColors(Object.keys(result).length);
            loadBarChart();
        }

        function loadBarChart(){
            new Chart("userCategoryOutlaysBar", {
              type: "bar",
              data: {
                labels: categories,
                datasets: [{
                  backgroundColor: colors,
                  data: categoryOutlays
                }]
              },
              options: {
                legend: {display: false},
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            stepSize: 500
                        }
                }]
            }
              }
            });
        }
    </script>
}